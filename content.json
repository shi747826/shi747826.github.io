{"meta":{"title":"SQRock","subtitle":null,"description":"菜是原罪","author":"SQRock","url":"https:shi747826.github.io"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-01-22T09:27:03.907Z","comments":false,"path":"about/index.html","permalink":"https:shi747826.github.io/about/index.html","excerpt":"","text":"[SQRock] 与&nbsp; SQRock&nbsp; （ ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-01-21T08:48:26.388Z","comments":false,"path":"bangumi/index.html","permalink":"https:shi747826.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-01-21T08:48:26.388Z","comments":false,"path":"client/index.html","permalink":"https:shi747826.github.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-01-22T08:55:10.028Z","comments":true,"path":"comment/index.html","permalink":"https:shi747826.github.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-01-21T08:48:26.388Z","comments":false,"path":"donate/index.html","permalink":"https:shi747826.github.io/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-01-22T11:16:45.968Z","comments":false,"path":"lab/index.html","permalink":"https:shi747826.github.io/lab/index.html","excerpt":"","text":"学生成绩综合管理系统","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-01-26T05:19:09.056Z","comments":true,"path":"links/index.html","permalink":"https:shi747826.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-01-22T08:56:16.627Z","comments":false,"path":"music/index.html","permalink":"https:shi747826.github.io/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-01-21T08:48:26.388Z","comments":true,"path":"rss/index.html","permalink":"https:shi747826.github.io/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-01-22T11:16:24.937Z","comments":true,"path":"tags/index.html","permalink":"https:shi747826.github.io/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-01-21T08:48:26.398Z","comments":false,"path":"theme-sakura/index.html","permalink":"https:shi747826.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-01-22T11:04:36.200Z","comments":false,"path":"video/index.html","permalink":"https:shi747826.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 实验室 平时无聊鼓捣的小项目 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"Educational Codeforces Round 81 (Rated for Div. 2) B. Infinite Prefixes","slug":"Educational-Codeforces-Round-81-Rated-for-Div-2-B-Infinite-Prefixes","date":"2020-01-30T02:28:46.000Z","updated":"2020-01-30T03:51:42.048Z","comments":true,"path":"2020/01/30/Educational-Codeforces-Round-81-Rated-for-Div-2-B-Infinite-Prefixes/","link":"","permalink":"https:shi747826.github.io/2020/01/30/Educational-Codeforces-Round-81-Rated-for-Div-2-B-Infinite-Prefixes/","excerpt":"","text":"B. Infinite PrefixesYou are given string s of length n consisting of 0-s and 1-s. You build an infinite string t as a concatenation of an infinite number of strings s, or t = ssss… For example, if s = 10010, then t= 100101001010010... Calculate the number of prefixes of t with balance equal to x. The balance of some string q is equal to cnt0,q − cnt1,q, where cnt0,q is the number of occurrences of 0 in q, and cnt1,q is the number of occurrences of 1 in q. The number of such prefixes can be infinite; if it is so, you must say that. A prefix is a string consisting of several first letters of a given string, without any reorders. An empty prefix is also a valid prefix. For example, the string “abcd“ has 5 prefixes: empty string, “a“, “ab“, “abc“ and “abcd“. InputThe first line contains the single integer T (1 ≤ T ≤ 100)— the number of test cases. Next 2T lines contain descriptions of test cases — two lines per test case. The first line contains two integers n and x (1 ≤ n ≤ 105, −109 ≤ x ≤ 109) — the length of string s and the desired balance, respectively. The second line contains the binary string s (|s| = n, si ∈ {0,1}). It’s guaranteed that the total sum of n doesn’t exceed 105. OutputPrint T integers — one per test case. For each test case print the number of prefixes or −1 if there is an infinite number of such prefixes. Exampleinput4 6 10 010010 5 3 10101 1 0 0 2 0 01output3 0 1 -1NoteIn the first test case, there are 3 good prefixes of t: with length 28, 30 and 32. Problem solving:这场cf全是字符串，直接自闭。 题目意思是给你一个01字符串，然后这个字符串可以无限叠加。例如010010可以变成010010 010010、010010 010010 010010 010010 010010（串中没有空格） … 。然后找这个无限字符串的前缀，前缀0的个数减去1的个数等于x。问有多少种符合的前缀。 因为x有正负之分，需要判断的太多了，然后就把自己绕进去了。看了别人的代码后才知道可以先把负数的 x 变成正数，然后把原串01对换，这样就只需要判断正数的x了。 把原串 cnt0,q − cnt1,q 记为 num。 因为串是无穷的，所以会出现有无穷多个解的情况。当原串 num 等于 0 ，原串前缀的cnt0,q − cnt1,q等于x 时，答案就有无穷多个。输出 -1 当 num 不为 0 时 我用一个数组a记录原串中前缀当前位置的 cnt0,i − cnt1,i ,如下表所示： s = 010010 , x = 10 然后遍历这个数组，当 ( x - a[i] ) % num == 0 &amp;&amp; ( x - a[i] ) / num &gt;= 0 ） 时 答案ans就+1； 如表中 下标为2时 ，a[1] = 0，( x - a[i] ) % num == 0； ( x - a[i] ) / num = 5 。说明前缀包含了五个原串中，再加上第六个原串的前两个就可以满足 cnt0,q − cnt1,q = 10 当前位置为 5 * 6 + 2 即 32。 当下标为4时， ( x - a[i] ) / num = 4 ，我们可以得到在位置 4 * 6 + 4 即 28 处找到解。 当下标为6时， ( x - a[i] ) / num = 4 ，我们可以得到在位置 4 * 6 + 6 即 30 处找到解。 符合样例一。 AC代码： #include&lt;bits/stdc++.h&gt; #define fi first #define se second #define PI acos(-1) #define LC(a) ((a&lt;&lt;1)) #define RC(a) ((a&lt;&lt;1)+1) #define MID(a,b) ((a+b)&gt;&gt;1) #define mem(a, b) memset(a, b, sizeof(a)) #define IOS() std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0) using namespace std; typedef long long ll; typedef unsigned long long ULL; typedef pair&lt;int,int&gt; PII; typedef pair&lt;ll,ll&gt; PLL; typedef pair&lt;ll,int&gt; PLI; const int INF = 0X3F3F3F3F; const int MIN = -(1&lt;&lt;30); const ll N = 1e6+7; ll a[N]; int main() { IOS(); int t; cin&gt;&gt;t; while(t--) { ll n,x; string s; cin&gt;&gt;n&gt;&gt;x&gt;&gt;s; if(x&lt;0) { x=-x; for(int i=0; i&lt;n; i++) s[i]=s[i]==&#39;0&#39;?&#39;1&#39;:&#39;0&#39;; } // cout&lt;&lt;s&lt;&lt;endl; ll num=0; for(int i=0; i&lt;s.size(); i++) { if(s[i]==&#39;0&#39;) num++; else num--; a[i]=num; } ll ans=0; int flag = 0; if(num==0) { for(int i=0; i&lt;n; i++) { if(a[i]==x) flag=1; } } else { for(int i=0; i&lt;n; i++) { if((x-a[i])%num==0 &amp;&amp; (x-a[i])/num&gt;=0) ans++; } } if(x==0) ans++; if(flag) cout&lt;&lt;-1&lt;&lt;endl; else cout&lt;&lt;ans&lt;&lt;endl; } return 0; } 补题过程中我输出 -1 用了 puts,导致了不断地 Wrong answer on test 4 ，百度后才知道 关闭同步流 (std::ios::sync_with_stdio(false) )之后,不能再使用 scanf 、printf、gets、puts …。昨天有一道题换行用了endl也导致了wa，改用 ‘\\n’ 就 ac,难受了我好长时间。我决定以后慢慢地放弃cin、cout。 虽然它很香。","categories":[{"name":"算法","slug":"算法","permalink":"https:shi747826.github.io/categories/算法/"}],"tags":[{"name":"codeforces","slug":"codeforces","permalink":"https:shi747826.github.io/tags/codeforces/"}],"keywords":[{"name":"算法","slug":"算法","permalink":"https:shi747826.github.io/categories/算法/"}]},{"title":"Codeforces Round #608 (Div. 2) B. Blocks","slug":"Codeforces-Round-608-Div-2-B-Blocks","date":"2020-01-28T06:26:39.000Z","updated":"2020-01-28T07:19:30.563Z","comments":true,"path":"2020/01/28/Codeforces-Round-608-Div-2-B-Blocks/","link":"","permalink":"https:shi747826.github.io/2020/01/28/Codeforces-Round-608-Div-2-B-Blocks/","excerpt":"","text":"B. BlocksThere are n blocks arranged in a row and numbered from left to right, starting from one. Each block is either black or white. You may perform the following operation zero or more times: choose two adjacent blocks and invert their colors (white block becomes black, and vice versa). You want to find a sequence of operations, such that they make all the blocks having the same color. You don’t have to minimize the number of operations, but it should not exceed 3 ⋅ n. If it is impossible to find such a sequence of operations, you need to report it. InputThe first line contains one integer n (2 ≤ n ≤ 200) — the number of blocks. The second line contains one string s consisting of n characters, each character is either “W” or “B”. If the i-th character is “W”, then the i-th block is white. If the i-th character is “B”, then the i-th block is black. OutputIf it is impossible to make all the blocks having the same color, print −1. Otherwise, print an integer k (0 ≤ k ≤ 3⋅n) — the number of operations. Then print k integers p1,p2,…,pk (1≤pj≤n−1), where pj is the position of the left block in the pair of blocks that should be affected by the j-th operation. If there are multiple answers, print any of them. Examplesinput 8 BWWWWWWBoutput 3 6 2 4input 4 BWBBoutput -1input 5 WWWWWoutput 0input 3 BWBoutput 2 2 1 NoteIn the first example, it is possible to make all blocks black in 3 operations. Start with changing blocks 6 and 7, so the sequence is “BWWWWBBB“. Then change blocks 2 and 3, so the sequence is “BBBWWBB“. And finally, change blocks 4 and 5, so all blocks are black. It is impossible to make all colors equal in the second example. All blocks are already white in the third example. In the fourth example it is possible to make all blocks white in two operations: first operation is to change blocks 2 and 3 (so the sequence is “BBW“), and then change blocks 1 and 2 (so all blocks are white). Problem solving:这是一道div.2的B题，属于偏容易的题目。意思就是给你一串字符串，让你修改连续的两个字符的颜色，看最终是否能够把整个字符串变成完全一样的颜色（全白：W 或者全黑： B），比赛时被卡住了没地方下手，现在再看数据范围一点也不大，完全可以暴力，只需要check这个字符串能不能变成全白和全黑。for两次就可以了。 #include&lt;bits/stdc++.h&gt; #define fi first #define se second #define PI acos(-1) #define LC(a) ((a&lt;&lt;1)) #define RC(a) ((a&lt;&lt;1)+1) #define MID(a,b) ((a+b)&gt;&gt;1) #define mem(a, b) memset(a, b, sizeof(a)) #define IOS() std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0) using namespace std; typedef long long ll; typedef unsigned long long ULL; typedef pair&lt;int,int&gt; PII; typedef pair&lt;ll,ll&gt; PLL; typedef pair&lt;ll,int&gt; PLI; const int INF = 0X3F3F3F3F; const int MIN = -(1&lt;&lt;30); const ll N = 1e5+7; int n; string ss; vector&lt;int&gt; v,vv; int check(char ch) { string s = ss; for(int i=0; i&lt;s.size(); i++) { if(s[i]!=ch) { if(i+1==s.size()) return 0; ch==&#39;W&#39;?v.push_back(i):vv.push_back(i); s[i]=ch; s[i+1]=s[i+1]==&#39;W&#39;?&#39;B&#39;:&#39;W&#39;; // cout&lt;&lt;s&lt;&lt;endl; } } // cout&lt;&lt;s.size()&lt;&lt;endl; // for(auto it:v) // cout&lt;&lt;it+1&lt;&lt;&quot; &quot;; // cout&lt;&lt;endl; return 1; } int main() { IOS(); cin&gt;&gt;n&gt;&gt;ss; int flag1 = check(&#39;W&#39;); int flag2 = check(&#39;B&#39;); if(flag1 &amp;&amp; flag2) { if(v.size()&lt;vv.size()) { cout&lt;&lt;v.size()&lt;&lt;endl; for(auto it:v) cout&lt;&lt;it+1&lt;&lt;&quot; &quot;; cout&lt;&lt;endl; } else { cout&lt;&lt;vv.size()&lt;&lt;endl; for(auto it:vv) cout&lt;&lt;it+1&lt;&lt;&quot; &quot;; cout&lt;&lt;endl; } } else if(flag1) { cout&lt;&lt;v.size()&lt;&lt;endl; for(auto it:v) cout&lt;&lt;it+1&lt;&lt;&quot; &quot;; cout&lt;&lt;endl; } else if(flag2) { cout&lt;&lt;vv.size()&lt;&lt;endl; for(auto it:vv) cout&lt;&lt;it+1&lt;&lt;&quot; &quot;; cout&lt;&lt;endl; } else cout&lt;&lt;&quot;-1&quot;&lt;&lt;endl; return 0; }","categories":[{"name":"算法","slug":"算法","permalink":"https:shi747826.github.io/categories/算法/"}],"tags":[{"name":"codeforces","slug":"codeforces","permalink":"https:shi747826.github.io/tags/codeforces/"}],"keywords":[{"name":"算法","slug":"算法","permalink":"https:shi747826.github.io/categories/算法/"}]},{"title":" Mamba out","slug":"Mamba-out","date":"2020-01-27T00:38:20.000Z","updated":"2020-01-27T05:08:52.926Z","comments":true,"path":"2020/01/27/Mamba-out/","link":"","permalink":"https:shi747826.github.io/2020/01/27/Mamba-out/","excerpt":"","text":"今天一早起来刷朋友圈突然看到科比不幸去世，第一反应就是假的，然后又看了B乎、微博才接受这个事实。感觉就像在做梦，2020开局就炸裂？？？科比今年才41岁，还没等到科比生儿子，这个世界怎么了？愿天堂也有亲爱的篮球，R.I.P。","categories":[{"name":"生活","slug":"生活","permalink":"https:shi747826.github.io/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"https:shi747826.github.io/categories/生活/"}]},{"title":"我想被困在学校","slug":"我想被困在学校","date":"2020-01-26T09:06:58.000Z","updated":"2020-01-26T10:51:07.888Z","comments":true,"path":"2020/01/26/我想被困在学校/","link":"","permalink":"https:shi747826.github.io/2020/01/26/我想被困在学校/","excerpt":"","text":"昨天还想提前几天去学校呢，这是杀人诛心嘛？？？","categories":[{"name":"生活","slug":"生活","permalink":"https:shi747826.github.io/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"https:shi747826.github.io/categories/生活/"}]},{"title":"新年快乐","slug":"新年快乐","date":"2020-01-25T08:51:19.000Z","updated":"2020-01-25T10:01:31.256Z","comments":true,"path":"2020/01/25/新年快乐/","link":"","permalink":"https:shi747826.github.io/2020/01/25/新年快乐/","excerpt":"","text":"今天是大年初一，还有将近20天才开学，在家各种被家长嫌弃，好想去学校啊。希望河南灾情不要太严重，一定要按时开学啊啊啊。","categories":[{"name":"生活","slug":"生活","permalink":"https:shi747826.github.io/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"https:shi747826.github.io/categories/生活/"}]},{"title":"快速幂","slug":"快速幂","date":"2019-11-19T01:08:47.000Z","updated":"2020-01-26T04:32:27.274Z","comments":true,"path":"2019/11/19/快速幂/","link":"","permalink":"https:shi747826.github.io/2019/11/19/快速幂/","excerpt":"快速幂 ll ksm(ll a,ll n) { ll rec=1; while(n) { if(n&amp;1) rec=rec*a%mod; a=a*a%mod; n&gt;&gt;=1; } return rec%mod; }","text":"快速幂 ll ksm(ll a,ll n) { ll rec=1; while(n) { if(n&amp;1) rec=rec*a%mod; a=a*a%mod; n&gt;&gt;=1; } return rec%mod; } 快速乘+快速幂 ll ksc(ll x,ll y) //计算x乘y的积 { ll res=0;//加法初始化 while(y) { if(y&amp;1) res=(res+x)%mod;//模仿二进制 x=(x&lt;&lt;1)%mod; y&gt;&gt;=1;//将x不断乘2达到二进制 } return res; } ll ksmm(ll a,ll n) { ll rec=1; while(n) { if(n&amp;1) rec=ksc(rec,a)%mod; a=ksc(a,a)%mod; n&gt;&gt;=1; } return rec%mod; }","categories":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}],"tags":[{"name":"板子","slug":"板子","permalink":"https:shi747826.github.io/tags/板子/"},{"name":"数论","slug":"数论","permalink":"https:shi747826.github.io/tags/数论/"},{"name":"快速幂","slug":"快速幂","permalink":"https:shi747826.github.io/tags/快速幂/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}]},{"title":"素数筛","slug":"素数筛","date":"2019-11-19T01:06:42.000Z","updated":"2020-01-26T04:32:35.139Z","comments":true,"path":"2019/11/19/素数筛/","link":"","permalink":"https:shi747826.github.io/2019/11/19/素数筛/","excerpt":"","text":"typedef long long ll; const int N = 1e6+7; int v[N]; int prime[N]; int b[N]; void e_prime() { int k=0; memset(v,0,sizeof(v)); for(int i=2; i*i&lt;N; i++) { if(!v[i]) for(int j=i*i; j&lt;N; j+=i) v[j]=1; } for(int i=2; i&lt;N; i++) if(!v[i]) prime[k++]=i; }","categories":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}],"tags":[{"name":"板子","slug":"板子","permalink":"https:shi747826.github.io/tags/板子/"},{"name":"数论","slug":"数论","permalink":"https:shi747826.github.io/tags/数论/"},{"name":"素数","slug":"素数","permalink":"https:shi747826.github.io/tags/素数/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}]},{"title":"Kruskal模板","slug":"Kruskal模板","date":"2019-11-19T01:02:30.000Z","updated":"2020-01-26T04:32:05.813Z","comments":true,"path":"2019/11/19/Kruskal模板/","link":"","permalink":"https:shi747826.github.io/2019/11/19/Kruskal模板/","excerpt":"","text":"#include&lt;bits/stdc++.h&gt; using namespace std; struct Edge { int x,y,len; } edge[500010]; int fa[100010],n,m,ans=0; bool operator &lt;(Edge a,Edge b) { return a.len&lt;b.len; } int find(int x) { return x==fa[x]?x:fa[x]=find(fa[x]); } int main() { cin&gt;&gt;n&gt;&gt;m; for(int i=1; i&lt;=m; i++) cin&gt;&gt;edge[i].x&gt;&gt;edge[i].y&gt;&gt;edge[i].len; //按照边权排序 sort(edge+1,edge+m+1); //初始化并查集 for(int i=1; i&lt;=n; i++) fa[i]=i; //求最小生成树 for(int i=1; i&lt;=m; i++) { int x=find(edge[i].x); int y=find(edge[i].y); if(x==y) continue; fa[x]=y; ans+=edge[i].len; } cout&lt;&lt;ans&lt;&lt;endl; return 0; }","categories":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}],"tags":[{"name":"板子","slug":"板子","permalink":"https:shi747826.github.io/tags/板子/"},{"name":"MST","slug":"MST","permalink":"https:shi747826.github.io/tags/MST/"},{"name":"kruskal","slug":"kruskal","permalink":"https:shi747826.github.io/tags/kruskal/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}]},{"title":"Prim模板","slug":"Prim模板","date":"2019-11-19T00:56:06.000Z","updated":"2020-01-26T04:32:17.785Z","comments":true,"path":"2019/11/19/Prim模板/","link":"","permalink":"https:shi747826.github.io/2019/11/19/Prim模板/","excerpt":"","text":"#include&lt;bits/stdc++.h&gt; using namespace std; // T:确定属于最小生成树的节点集合 // S:剩余节点集合 int a[3010][3010]; int d[3010];// d[x], x表示x加入T时选出的最小边的权值 bool vis[3010];// vis[x]==true表示该节点已经加入了T集合 int n,m,ans=0; void prim() { memset(d,0x3f,sizeof(d)); memset(vis,0,sizeof(vis)); d[1]=0; for(int i=1; i&lt;n; i++)//循环n-1次 每次找出一个点加入T { int x=0; for(int j=1; j&lt;=n; j++)//遍历所有节点 { //当前d[]数组存储的是各个节点距离生成树的最小权值 if(!vis[j] &amp;&amp; (x==0 || d[j]&lt;d[x])) //!vis[j]表示该节点尚未加入T集合 x=j; //选出距离生成树最近的节点 } vis[x]=1;//将该节点加入到生成树中(T集合) for(int y=1; y&lt;=n; y++) { if(!vis[y])//新加了一个点，就维护该点到还没有加入T集合的点的距离 d[y]=min(d[y],a[x][y]);//取距离生成树 } } } int main() { cin&gt;&gt;n&gt;&gt;m; //构建邻接矩阵 memset(a,0x3f,sizeof(a)); for(int i=1; i&lt;=n; i++) a[i][i]=0; for(int i=1; i&lt;=m; i++) { int x,y,z; cin&gt;&gt;x&gt;&gt;y&gt;&gt;z; a[x][y]=a[y][x]=min(a[x][y],z); } //求最小生成树 prim(); for(int i=2; i&lt;=n; i++) ans+=d[i]; cout&lt;&lt;ans&lt;&lt;endl; return 0; } /* 输入 输出15 6 10 1 2 6 1 3 1 1 4 5 2 3 5 2 5 3 3 4 5 3 5 6 3 6 4 4 6 2 5 6 6 */","categories":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}],"tags":[{"name":"板子","slug":"板子","permalink":"https:shi747826.github.io/tags/板子/"},{"name":"MST","slug":"MST","permalink":"https:shi747826.github.io/tags/MST/"},{"name":"Prim","slug":"Prim","permalink":"https:shi747826.github.io/tags/Prim/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}]},{"title":"Dijkstra模板","slug":"Dijkstra","date":"2019-11-18T12:19:18.000Z","updated":"2020-01-26T04:31:56.364Z","comments":true,"path":"2019/11/18/Dijkstra/","link":"","permalink":"https:shi747826.github.io/2019/11/18/Dijkstra/","excerpt":"普通版 int a[3010][3010],d[3010]; int n,m; bool v[3010]; void dijkstra() { memset(d,INF,sizeof(d)); memset(v,0,sizeof(v)); d[1]=0; for(int i=1; i&lt;n; i++) { int x=0; for(int j=1; j&lt;=n; j++) { if(!v[j] &amp;&amp; (x==0 || d[j]&lt;d[x])) x=j; } v[x]=1; for(int y=1; y&lt;=n; y++) if(!v[y]) d[y]=min(d[y],d[x]+a[x][y]); } }","text":"普通版 int a[3010][3010],d[3010]; int n,m; bool v[3010]; void dijkstra() { memset(d,INF,sizeof(d)); memset(v,0,sizeof(v)); d[1]=0; for(int i=1; i&lt;n; i++) { int x=0; for(int j=1; j&lt;=n; j++) { if(!v[j] &amp;&amp; (x==0 || d[j]&lt;d[x])) x=j; } v[x]=1; for(int y=1; y&lt;=n; y++) if(!v[y]) d[y]=min(d[y],d[x]+a[x][y]); } } 堆优化版 #include&lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int N = 1000010; const int INF = 0x3f3f3f3f; int n,m; struct edge { int to; int r; } ; typedef pair&lt;int,int&gt; P; vector&lt;edge&gt; a[N]; int d[50005]; void dijkstra(int s) { priority_queue&lt;P,vector&lt;P&gt;,greater&lt;P&gt; &gt;que; memset(d,INF,sizeof(d)); d[s]=0; que.push(P(0,s)); while(que.size()) { P p=que.top(); que.pop(); int v=p.second; if(d[v]&lt;p.first) continue; for(int i=0; i&lt;a[v].size(); i++) { edge e=a[v][i]; if(d[e.to]&gt;d[v]+e.r) { d[e.to]=d[v]+e.r; que.push(P(d[e.to],e.to)); } } } } int main() { cin&gt;&gt;n&gt;&gt;m; int x,y,r; while(m--) { cin&gt;&gt;x&gt;&gt;y&gt;&gt;r; edge t1,t2; t1.to=y; t1.r=r; t2.to=x; t2.r=r; a[x].push_back(t1); a[y].push_back(t2); } dijkstra(1); for(int i=0; i&lt;=n; i++) cout&lt;&lt;d[i]&lt;&lt;&quot; &quot;; cout&lt;&lt;endl; return 0; }","categories":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}],"tags":[{"name":"板子","slug":"板子","permalink":"https:shi747826.github.io/tags/板子/"},{"name":"最短路","slug":"最短路","permalink":"https:shi747826.github.io/tags/最短路/"},{"name":"dijkstra","slug":"dijkstra","permalink":"https:shi747826.github.io/tags/dijkstra/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https:shi747826.github.io/categories/笔记/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2020-01-25T10:01:37.548Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"https:shi747826.github.io/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"https:shi747826.github.io/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"https:shi747826.github.io/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"https:shi747826.github.io/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https:shi747826.github.io/categories/技术/"}]}]}